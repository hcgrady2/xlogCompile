apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.tencent.mars.xlogsample"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a"
            //abiFilters "armeabi"  ///tes
          //  abiFilters "arm64-v8a"
//            abiFilters "x86"
            //test
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }

    }
    //tet
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // 测试环境
            buildConfigField "long", "APP_BUILD_TIME", System.currentTimeMillis() + "L"
            // 混淆开关
            minifyEnabled false
            // 是否zip对齐
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            // 是否打开debuggable开关
            debuggable true
            // 是否打开jniDebuggable开关
            jniDebuggable true
            // 混淆配置文件
            // 签名配置
            signingConfig signingConfigs.debug
            //ndkConfig.abiFilters  'arm64-v8a'
           /// ndkConfig.abiFilters 'armeabi','arm64-v7a'

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'


        }
    }


//    sourceSets {
//        main {
//            jniLibs.srcDirs = ["src/main/jniLibs/jni"]
//        }
//    }

    externalNativeBuild {

        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }

}

configurations {
    cmake_depends
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    implementation "com.tencent.mars:mars-xlog:${VERSION_NAME}${VERSION_NAME_SUFFIX}"
    cmake_depends "com.tencent.mars:mars-xlog:${VERSION_NAME}${VERSION_NAME_SUFFIX}"
}

task resolveDependencies {
    project.configurations.each { configuration ->
        if ("cmake_depends".equalsIgnoreCase(configuration.name)) {
            def lib = configuration.resolve()[0]
            copy {
                from zipTree(lib)
                into "${project.rootDir}/${project.name}/src/main/jniLibs/"
                include "jni/**/*.so"
            }
        }
    }
}

build.dependsOn resolveDependencies
